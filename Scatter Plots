{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "74bae68a",
   "metadata": {
    "papermill": {
     "duration": 0.011949,
     "end_time": "2024-06-11T14:01:39.623212",
     "exception": false,
     "start_time": "2024-06-11T14:01:39.611263",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**This notebook is an exercise in the [Data Visualization](https://www.kaggle.com/learn/data-visualization) course.  You can reference the tutorial at [this link](https://www.kaggle.com/alexisbcook/scatter-plots).**\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5d8d320",
   "metadata": {
    "papermill": {
     "duration": 0.011153,
     "end_time": "2024-06-11T14:01:39.646044",
     "exception": false,
     "start_time": "2024-06-11T14:01:39.634891",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In this exercise, you will use your new knowledge to propose a solution to a real-world scenario.  To succeed, you will need to import data into Python, answer questions using the data, and generate **scatter plots** to understand patterns in the data.\n",
    "\n",
    "## Scenario\n",
    "\n",
    "You work for a major candy producer, and your goal is to write a report that your company can use to guide the design of its next product.  Soon after starting your research, you stumble across this [very interesting dataset](https://fivethirtyeight.com/features/the-ultimate-halloween-candy-power-ranking/) containing results from a fun survey to crowdsource favorite candies.\n",
    "\n",
    "## Setup\n",
    "\n",
    "Run the next cell to import and configure the Python libraries that you need to complete the exercise."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "988b07ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:39.670736Z",
     "iopub.status.busy": "2024-06-11T14:01:39.670319Z",
     "iopub.status.idle": "2024-06-11T14:01:42.404440Z",
     "shell.execute_reply": "2024-06-11T14:01:42.403188Z"
    },
    "papermill": {
     "duration": 2.749455,
     "end_time": "2024-06-11T14:01:42.407064",
     "exception": false,
     "start_time": "2024-06-11T14:01:39.657609",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setup Complete\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "pd.plotting.register_matplotlib_converters()\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "print(\"Setup Complete\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63688166",
   "metadata": {
    "papermill": {
     "duration": 0.011608,
     "end_time": "2024-06-11T14:01:42.430525",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.418917",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The questions below will give you feedback on your work. Run the following cell to set up our feedback system."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6eb5d6e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.456023Z",
     "iopub.status.busy": "2024-06-11T14:01:42.455458Z",
     "iopub.status.idle": "2024-06-11T14:01:42.545885Z",
     "shell.execute_reply": "2024-06-11T14:01:42.544462Z"
    },
    "papermill": {
     "duration": 0.106459,
     "end_time": "2024-06-11T14:01:42.548837",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.442378",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setup Complete\n"
     ]
    }
   ],
   "source": [
    "# Set up code checking\n",
    "import os\n",
    "if not os.path.exists(\"../input/candy.csv\"):\n",
    "    os.symlink(\"../input/data-for-datavis/candy.csv\", \"../input/candy.csv\") \n",
    "from learntools.core import binder\n",
    "binder.bind(globals())\n",
    "from learntools.data_viz_to_coder.ex4 import *\n",
    "print(\"Setup Complete\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "05abd2bc",
   "metadata": {
    "papermill": {
     "duration": 0.011557,
     "end_time": "2024-06-11T14:01:42.572459",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.560902",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Step 1: Load the Data\n",
    "\n",
    "Read the candy data file into `candy_data`.  Use the `\"id\"` column to label the rows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9d3be958",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.598426Z",
     "iopub.status.busy": "2024-06-11T14:01:42.598001Z",
     "iopub.status.idle": "2024-06-11T14:01:42.613576Z",
     "shell.execute_reply": "2024-06-11T14:01:42.612344Z"
    },
    "papermill": {
     "duration": 0.030999,
     "end_time": "2024-06-11T14:01:42.615927",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.584928",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"1_LoadData\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Path of the file to read\n",
    "candy_filepath = \"../input/candy.csv\"\n",
    "\n",
    "# Fill in the line below to read the file into a variable candy_data\n",
    "candy_data = pd.read_csv(candy_filepath, index_col = \"id\")\n",
    "\n",
    "# Run the line below with no changes to check that you've loaded the data correctly\n",
    "step_1.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b9e6a833",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.642081Z",
     "iopub.status.busy": "2024-06-11T14:01:42.641673Z",
     "iopub.status.idle": "2024-06-11T14:01:42.646509Z",
     "shell.execute_reply": "2024-06-11T14:01:42.645219Z"
    },
    "papermill": {
     "duration": 0.020935,
     "end_time": "2024-06-11T14:01:42.649087",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.628152",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_1.hint()\n",
    "#step_1.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55673926",
   "metadata": {
    "papermill": {
     "duration": 0.012359,
     "end_time": "2024-06-11T14:01:42.675104",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.662745",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Step 2: Review the data\n",
    "\n",
    "Use a Python command to print the first five rows of the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a04ed233",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.701577Z",
     "iopub.status.busy": "2024-06-11T14:01:42.701112Z",
     "iopub.status.idle": "2024-06-11T14:01:42.726351Z",
     "shell.execute_reply": "2024-06-11T14:01:42.725096Z"
    },
    "papermill": {
     "duration": 0.041423,
     "end_time": "2024-06-11T14:01:42.728907",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.687484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>competitorname</th>\n",
       "      <th>chocolate</th>\n",
       "      <th>fruity</th>\n",
       "      <th>caramel</th>\n",
       "      <th>peanutyalmondy</th>\n",
       "      <th>nougat</th>\n",
       "      <th>crispedricewafer</th>\n",
       "      <th>hard</th>\n",
       "      <th>bar</th>\n",
       "      <th>pluribus</th>\n",
       "      <th>sugarpercent</th>\n",
       "      <th>pricepercent</th>\n",
       "      <th>winpercent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100 Grand</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>0.732</td>\n",
       "      <td>0.860</td>\n",
       "      <td>66.971725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3 Musketeers</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>0.604</td>\n",
       "      <td>0.511</td>\n",
       "      <td>67.602936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Air Heads</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>0.906</td>\n",
       "      <td>0.511</td>\n",
       "      <td>52.341465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Almond Joy</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>0.465</td>\n",
       "      <td>0.767</td>\n",
       "      <td>50.347546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Baby Ruth</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>0.604</td>\n",
       "      <td>0.767</td>\n",
       "      <td>56.914547</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   competitorname chocolate fruity caramel peanutyalmondy nougat  \\\n",
       "id                                                                 \n",
       "0       100 Grand       Yes     No     Yes             No     No   \n",
       "1    3 Musketeers       Yes     No      No             No    Yes   \n",
       "2       Air Heads        No    Yes      No             No     No   \n",
       "3      Almond Joy       Yes     No      No            Yes     No   \n",
       "4       Baby Ruth       Yes     No     Yes            Yes    Yes   \n",
       "\n",
       "   crispedricewafer hard  bar pluribus  sugarpercent  pricepercent  winpercent  \n",
       "id                                                                              \n",
       "0               Yes   No  Yes       No         0.732         0.860   66.971725  \n",
       "1                No   No  Yes       No         0.604         0.511   67.602936  \n",
       "2                No   No   No       No         0.906         0.511   52.341465  \n",
       "3                No   No  Yes       No         0.465         0.767   50.347546  \n",
       "4                No   No  Yes       No         0.604         0.767   56.914547  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print the first five rows of the data\n",
    "candy_data.head(5)\n",
    "\n",
    "# Your code here"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "982bcb8f",
   "metadata": {
    "papermill": {
     "duration": 0.012283,
     "end_time": "2024-06-11T14:01:42.754001",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.741718",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The dataset contains 83 rows, where each corresponds to a different candy bar.  There are 13 columns:\n",
    "- `'competitorname'` contains the name of the candy bar. \n",
    "- the next **9** columns (from `'chocolate'` to `'pluribus'`) describe the candy.  For instance, rows with chocolate candies have `\"Yes\"` in the `'chocolate'` column (and candies without chocolate have `\"No\"` in the same column).\n",
    "- `'sugarpercent'` provides some indication of the amount of sugar, where higher values signify higher sugar content.\n",
    "- `'pricepercent'` shows the price per unit, relative to the other candies in the dataset.\n",
    "- `'winpercent'` is calculated from the survey results; higher values indicate that the candy was more popular with survey respondents.\n",
    "\n",
    "Use the first five rows of the data to answer the questions below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c9850997",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.781430Z",
     "iopub.status.busy": "2024-06-11T14:01:42.780985Z",
     "iopub.status.idle": "2024-06-11T14:01:42.803331Z",
     "shell.execute_reply": "2024-06-11T14:01:42.802103Z"
    },
    "papermill": {
     "duration": 0.038913,
     "end_time": "2024-06-11T14:01:42.806112",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.767199",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>competitorname</th>\n",
       "      <th>chocolate</th>\n",
       "      <th>fruity</th>\n",
       "      <th>caramel</th>\n",
       "      <th>peanutyalmondy</th>\n",
       "      <th>nougat</th>\n",
       "      <th>crispedricewafer</th>\n",
       "      <th>hard</th>\n",
       "      <th>bar</th>\n",
       "      <th>pluribus</th>\n",
       "      <th>sugarpercent</th>\n",
       "      <th>pricepercent</th>\n",
       "      <th>winpercent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3 Musketeers</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>0.604</td>\n",
       "      <td>0.511</td>\n",
       "      <td>67.602936</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   competitorname chocolate fruity caramel peanutyalmondy nougat  \\\n",
       "id                                                                 \n",
       "1    3 Musketeers       Yes     No      No             No    Yes   \n",
       "\n",
       "   crispedricewafer hard  bar pluribus  sugarpercent  pricepercent  winpercent  \n",
       "id                                                                              \n",
       "1                No   No  Yes       No         0.604         0.511   67.602936  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "candy_data[candy_data.competitorname == '3 Musketeers']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "983fa2d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.833474Z",
     "iopub.status.busy": "2024-06-11T14:01:42.833078Z",
     "iopub.status.idle": "2024-06-11T14:01:42.844303Z",
     "shell.execute_reply": "2024-06-11T14:01:42.842883Z"
    },
    "papermill": {
     "duration": 0.028429,
     "end_time": "2024-06-11T14:01:42.847419",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.818990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"2_ReviewData\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Fill in the line below: Which candy was more popular with survey respondents:\n",
    "# '3 Musketeers' or 'Almond Joy'?  (Please enclose your answer in single quotes.)\n",
    "more_popular = '3 Musketeers'\n",
    "\n",
    "# Fill in the line below: Which candy has higher sugar content: 'Air Heads'\n",
    "# or 'Baby Ruth'? (Please enclose your answer in single quotes.)\n",
    "more_sugar = 'Air Heads'\n",
    "\n",
    "# Check your answers\n",
    "step_2.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7a21e9c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.877257Z",
     "iopub.status.busy": "2024-06-11T14:01:42.876847Z",
     "iopub.status.idle": "2024-06-11T14:01:42.881712Z",
     "shell.execute_reply": "2024-06-11T14:01:42.880479Z"
    },
    "papermill": {
     "duration": 0.022733,
     "end_time": "2024-06-11T14:01:42.884127",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.861394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_2.hint()\n",
    "#step_2.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bf7b436",
   "metadata": {
    "papermill": {
     "duration": 0.013652,
     "end_time": "2024-06-11T14:01:42.911005",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.897353",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Step 3: The role of sugar\n",
    "\n",
    "Do people tend to prefer candies with higher sugar content?  \n",
    "\n",
    "#### Part A\n",
    "\n",
    "Create a scatter plot that shows the relationship between `'sugarpercent'` (on the horizontal x-axis) and `'winpercent'` (on the vertical y-axis).  _Don't add a regression line just yet -- you'll do that in the next step!_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6fefa419",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:42.939139Z",
     "iopub.status.busy": "2024-06-11T14:01:42.938710Z",
     "iopub.status.idle": "2024-06-11T14:01:43.432667Z",
     "shell.execute_reply": "2024-06-11T14:01:43.431439Z"
    },
    "papermill": {
     "duration": 0.511039,
     "end_time": "2024-06-11T14:01:43.435333",
     "exception": false,
     "start_time": "2024-06-11T14:01:42.924294",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"3.1_PlotBlueScatter\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot showing the relationship between 'sugarpercent' and 'winpercent'\n",
    "plt.figure(figsize = (10, 8))\n",
    "sns.scatterplot(x = candy_data['sugarpercent'], y = candy_data['winpercent'])\n",
    "\n",
    "# Your code here\n",
    "\n",
    "# Check your answer\n",
    "step_3.a.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8f7eaa48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:43.465563Z",
     "iopub.status.busy": "2024-06-11T14:01:43.465164Z",
     "iopub.status.idle": "2024-06-11T14:01:43.470076Z",
     "shell.execute_reply": "2024-06-11T14:01:43.468970Z"
    },
    "papermill": {
     "duration": 0.022919,
     "end_time": "2024-06-11T14:01:43.472645",
     "exception": false,
     "start_time": "2024-06-11T14:01:43.449726",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_3.a.hint()\n",
    "#step_3.a.solution_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a11674d",
   "metadata": {
    "papermill": {
     "duration": 0.01424,
     "end_time": "2024-06-11T14:01:43.501606",
     "exception": false,
     "start_time": "2024-06-11T14:01:43.487366",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Part B\n",
    "\n",
    "Does the scatter plot show a **strong** correlation between the two variables?  If so, are candies with more sugar relatively more or less popular with the survey respondents?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "86cf55d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:43.533317Z",
     "iopub.status.busy": "2024-06-11T14:01:43.532858Z",
     "iopub.status.idle": "2024-06-11T14:01:43.537909Z",
     "shell.execute_reply": "2024-06-11T14:01:43.536676Z"
    },
    "papermill": {
     "duration": 0.023933,
     "end_time": "2024-06-11T14:01:43.540564",
     "exception": false,
     "start_time": "2024-06-11T14:01:43.516631",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#step_3.b.hint()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6d2a9ba1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:43.570961Z",
     "iopub.status.busy": "2024-06-11T14:01:43.570519Z",
     "iopub.status.idle": "2024-06-11T14:01:43.580731Z",
     "shell.execute_reply": "2024-06-11T14:01:43.579293Z"
    },
    "papermill": {
     "duration": 0.02848,
     "end_time": "2024-06-11T14:01:43.583449",
     "exception": false,
     "start_time": "2024-06-11T14:01:43.554969",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 4, \"questionId\": \"3.2_ThinkBlueScatter\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc99\">Solution:</span> The scatter plot does not show a strong correlation between the two variables. Since there is no clear relationship between the two variables, this tells us that sugar content does not play a strong role in candy popularity."
      ],
      "text/plain": [
       "Solution: The scatter plot does not show a strong correlation between the two variables. Since there is no clear relationship between the two variables, this tells us that sugar content does not play a strong role in candy popularity."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check your answer (Run this code cell to receive credit!)\n",
    "step_3.b.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bca3df4a",
   "metadata": {
    "papermill": {
     "duration": 0.014161,
     "end_time": "2024-06-11T14:01:43.612160",
     "exception": false,
     "start_time": "2024-06-11T14:01:43.597999",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Step 4: Take a closer look\n",
    "\n",
    "#### Part A\n",
    "\n",
    "Create the same scatter plot you created in **Step 3**, but now with a regression line!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8425deb8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:43.644094Z",
     "iopub.status.busy": "2024-06-11T14:01:43.642898Z",
     "iopub.status.idle": "2024-06-11T14:01:44.109138Z",
     "shell.execute_reply": "2024-06-11T14:01:44.108037Z"
    },
    "papermill": {
     "duration": 0.485033,
     "end_time": "2024-06-11T14:01:44.111942",
     "exception": false,
     "start_time": "2024-06-11T14:01:43.626909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"4.1_PlotBlueReg\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot w/ regression line showing the relationship between 'sugarpercent' and 'winpercent'\n",
    "plt.figure(figsize = (10,8))\n",
    "sns.regplot(x = candy_data['sugarpercent'], y = candy_data['winpercent'])\n",
    "\n",
    "# Your code here\n",
    "\n",
    "# Check your answer\n",
    "step_4.a.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f3a77fd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:44.146345Z",
     "iopub.status.busy": "2024-06-11T14:01:44.145774Z",
     "iopub.status.idle": "2024-06-11T14:01:44.151104Z",
     "shell.execute_reply": "2024-06-11T14:01:44.149833Z"
    },
    "papermill": {
     "duration": 0.026803,
     "end_time": "2024-06-11T14:01:44.154370",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.127567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_4.a.hint()\n",
    "#step_4.a.solution_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f51ab77b",
   "metadata": {
    "papermill": {
     "duration": 0.016294,
     "end_time": "2024-06-11T14:01:44.187948",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.171654",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Part B\n",
    "\n",
    "According to the plot above, is there a **slight** correlation between `'winpercent'` and `'sugarpercent'`?  What does this tell you about the candy that people tend to prefer?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8e17c220",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:44.222162Z",
     "iopub.status.busy": "2024-06-11T14:01:44.221760Z",
     "iopub.status.idle": "2024-06-11T14:01:44.226715Z",
     "shell.execute_reply": "2024-06-11T14:01:44.225516Z"
    },
    "papermill": {
     "duration": 0.024294,
     "end_time": "2024-06-11T14:01:44.229104",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.204810",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#step_4.b.hint()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b142c4f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:44.262255Z",
     "iopub.status.busy": "2024-06-11T14:01:44.261829Z",
     "iopub.status.idle": "2024-06-11T14:01:44.271195Z",
     "shell.execute_reply": "2024-06-11T14:01:44.269994Z"
    },
    "papermill": {
     "duration": 0.029034,
     "end_time": "2024-06-11T14:01:44.273920",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.244886",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 4, \"questionId\": \"4.2_ThinkBlueReg\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc99\">Solution:</span> Since the regression line has a slightly positive slope, this tells us that there is a slightly positive correlation between `'winpercent'` and `'sugarpercent'`. Thus, people have a slight preference for candies containing relatively more sugar."
      ],
      "text/plain": [
       "Solution: Since the regression line has a slightly positive slope, this tells us that there is a slightly positive correlation between `'winpercent'` and `'sugarpercent'`. Thus, people have a slight preference for candies containing relatively more sugar."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check your answer (Run this code cell to receive credit!)\n",
    "step_4.b.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38703aef",
   "metadata": {
    "papermill": {
     "duration": 0.016627,
     "end_time": "2024-06-11T14:01:44.306893",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.290266",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Step 5: Chocolate!\n",
    "\n",
    "In the code cell below, create a scatter plot to show the relationship between `'pricepercent'` (on the horizontal x-axis) and `'winpercent'` (on the vertical y-axis). Use the `'chocolate'` column to color-code the points.  _Don't add any regression lines just yet -- you'll do that in the next step!_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7e93b1bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:44.342190Z",
     "iopub.status.busy": "2024-06-11T14:01:44.341772Z",
     "iopub.status.idle": "2024-06-11T14:01:44.734983Z",
     "shell.execute_reply": "2024-06-11T14:01:44.733738Z"
    },
    "papermill": {
     "duration": 0.414562,
     "end_time": "2024-06-11T14:01:44.737573",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.323011",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"5_ColorScatter\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot showing the relationship between 'pricepercent', 'winpercent', and 'chocolate'\n",
    "\n",
    "plt.figure(figsize = (10,8))\n",
    "sns.scatterplot(x = candy_data['sugarpercent'], y = candy_data['winpercent'], hue = candy_data['chocolate'])\n",
    "# Your code here\n",
    "\n",
    "# Check your answer\n",
    "step_5.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d81446f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:44.773928Z",
     "iopub.status.busy": "2024-06-11T14:01:44.773521Z",
     "iopub.status.idle": "2024-06-11T14:01:44.778862Z",
     "shell.execute_reply": "2024-06-11T14:01:44.777632Z"
    },
    "papermill": {
     "duration": 0.026856,
     "end_time": "2024-06-11T14:01:44.781517",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.754661",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_5.hint()\n",
    "#step_5.solution_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac57c9b3",
   "metadata": {
    "papermill": {
     "duration": 0.018278,
     "end_time": "2024-06-11T14:01:44.816887",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.798609",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Can you see any interesting patterns in the scatter plot?  We'll investigate this plot further  by adding regression lines in the next step!\n",
    "\n",
    "## Step 6: Investigate chocolate\n",
    "\n",
    "#### Part A\n",
    "\n",
    "Create the same scatter plot you created in **Step 5**, but now with two regression lines, corresponding to (1) chocolate candies and (2) candies without chocolate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4247912a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:44.853133Z",
     "iopub.status.busy": "2024-06-11T14:01:44.852731Z",
     "iopub.status.idle": "2024-06-11T14:01:45.867592Z",
     "shell.execute_reply": "2024-06-11T14:01:45.866372Z"
    },
    "papermill": {
     "duration": 1.036194,
     "end_time": "2024-06-11T14:01:45.870474",
     "exception": false,
     "start_time": "2024-06-11T14:01:44.834280",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"6.1_PlotColorReg\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 578.611x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Color-coded scatter plot w/ regression lines\n",
    "\n",
    "\n",
    "sns.lmplot(x = 'sugarpercent', y = 'winpercent', hue = 'chocolate', data = candy_data)\n",
    "# Your code here\n",
    "\n",
    "# Check your answer\n",
    "step_6.a.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c27dd412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:45.912069Z",
     "iopub.status.busy": "2024-06-11T14:01:45.911637Z",
     "iopub.status.idle": "2024-06-11T14:01:45.916686Z",
     "shell.execute_reply": "2024-06-11T14:01:45.915597Z"
    },
    "papermill": {
     "duration": 0.027799,
     "end_time": "2024-06-11T14:01:45.919190",
     "exception": false,
     "start_time": "2024-06-11T14:01:45.891391",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_6.a.hint()\n",
    "#step_6.a.solution_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "324f78c0",
   "metadata": {
    "papermill": {
     "duration": 0.018287,
     "end_time": "2024-06-11T14:01:45.956292",
     "exception": false,
     "start_time": "2024-06-11T14:01:45.938005",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Part B\n",
    "\n",
    "Using the regression lines, what conclusions can you draw about the effects of chocolate and price on candy popularity?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a65b7c01",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:45.995924Z",
     "iopub.status.busy": "2024-06-11T14:01:45.995112Z",
     "iopub.status.idle": "2024-06-11T14:01:45.999954Z",
     "shell.execute_reply": "2024-06-11T14:01:45.998941Z"
    },
    "papermill": {
     "duration": 0.026724,
     "end_time": "2024-06-11T14:01:46.002277",
     "exception": false,
     "start_time": "2024-06-11T14:01:45.975553",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#step_6.b.hint()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "2c4da216",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:46.103968Z",
     "iopub.status.busy": "2024-06-11T14:01:46.103564Z",
     "iopub.status.idle": "2024-06-11T14:01:46.114187Z",
     "shell.execute_reply": "2024-06-11T14:01:46.112872Z"
    },
    "papermill": {
     "duration": 0.032996,
     "end_time": "2024-06-11T14:01:46.116876",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.083880",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 4, \"questionId\": \"6.2_ThinkColorReg\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc99\">Solution:</span> We'll begin with the regression line for chocolate candies. Since this line has a slightly positive slope, we can say that more expensive chocolate candies tend to be more popular (than relatively cheaper chocolate candies).  Likewise, since the regression line for candies without chocolate has a negative slope, we can say that if candies don't contain chocolate, they tend to be more popular when they are cheaper.  One important note, however, is that the dataset is quite small -- so we shouldn't invest too much trust in these patterns!  To inspire more confidence in the results, we should add more candies to the dataset."
      ],
      "text/plain": [
       "Solution: We'll begin with the regression line for chocolate candies. Since this line has a slightly positive slope, we can say that more expensive chocolate candies tend to be more popular (than relatively cheaper chocolate candies).  Likewise, since the regression line for candies without chocolate has a negative slope, we can say that if candies don't contain chocolate, they tend to be more popular when they are cheaper.  One important note, however, is that the dataset is quite small -- so we shouldn't invest too much trust in these patterns!  To inspire more confidence in the results, we should add more candies to the dataset."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check your answer (Run this code cell to receive credit!)\n",
    "step_6.b.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fa3d8d3",
   "metadata": {
    "papermill": {
     "duration": 0.018546,
     "end_time": "2024-06-11T14:01:46.155447",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.136901",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Step 7: Everybody loves chocolate.\n",
    "\n",
    "#### Part A\n",
    "\n",
    "Create a categorical scatter plot to highlight the relationship between `'chocolate'` and `'winpercent'`.  Put `'chocolate'` on the (horizontal) x-axis, and `'winpercent'` on the (vertical) y-axis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "27e65d70",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:46.197442Z",
     "iopub.status.busy": "2024-06-11T14:01:46.197017Z",
     "iopub.status.idle": "2024-06-11T14:01:46.553935Z",
     "shell.execute_reply": "2024-06-11T14:01:46.552331Z"
    },
    "papermill": {
     "duration": 0.381736,
     "end_time": "2024-06-11T14:01:46.558460",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.176724",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"7.1_PlotSwarm\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter plot showing the relationship between 'chocolate' and 'winpercent'\n",
    "sns.swarmplot(x = candy_data['chocolate'], \n",
    "              y = candy_data['winpercent'],)\n",
    "# Your code here\n",
    "\n",
    "# Check your answer\n",
    "step_7.a.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f1712e39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:46.633816Z",
     "iopub.status.busy": "2024-06-11T14:01:46.633399Z",
     "iopub.status.idle": "2024-06-11T14:01:46.638749Z",
     "shell.execute_reply": "2024-06-11T14:01:46.637302Z"
    },
    "papermill": {
     "duration": 0.040904,
     "end_time": "2024-06-11T14:01:46.641453",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.600549",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#step_7.a.hint()\n",
    "#step_7.a.solution_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0842010",
   "metadata": {
    "papermill": {
     "duration": 0.019316,
     "end_time": "2024-06-11T14:01:46.680259",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.660943",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Part B\n",
    "\n",
    "You decide to dedicate a section of your report to the fact that chocolate candies tend to be more popular than candies without chocolate.  Which plot is more appropriate to tell this story: the plot from **Step 6**, or the plot from **Step 7**?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "47828ed9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:46.723608Z",
     "iopub.status.busy": "2024-06-11T14:01:46.723193Z",
     "iopub.status.idle": "2024-06-11T14:01:46.728417Z",
     "shell.execute_reply": "2024-06-11T14:01:46.727153Z"
    },
    "papermill": {
     "duration": 0.030302,
     "end_time": "2024-06-11T14:01:46.731020",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.700718",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#step_7.b.hint()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "44f83d15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-11T14:01:46.772640Z",
     "iopub.status.busy": "2024-06-11T14:01:46.772251Z",
     "iopub.status.idle": "2024-06-11T14:01:46.781477Z",
     "shell.execute_reply": "2024-06-11T14:01:46.780319Z"
    },
    "papermill": {
     "duration": 0.03361,
     "end_time": "2024-06-11T14:01:46.784625",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.751015",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 4, \"questionId\": \"7.2_ThinkSwarm\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc99\">Solution:</span> In this case, the categorical scatter plot from **Step 7** is the more appropriate plot. While both plots tell the desired story, the plot from **Step 6** conveys far more information that could distract from the main point."
      ],
      "text/plain": [
       "Solution: In this case, the categorical scatter plot from **Step 7** is the more appropriate plot. While both plots tell the desired story, the plot from **Step 6** conveys far more information that could distract from the main point."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check your answer (Run this code cell to receive credit!)\n",
    "step_7.b.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0a94b62",
   "metadata": {
    "papermill": {
     "duration": 0.019742,
     "end_time": "2024-06-11T14:01:46.826131",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.806389",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Keep going\n",
    "\n",
    "Explore **[histograms and density plots](https://www.kaggle.com/alexisbcook/distributions)**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b876f2d",
   "metadata": {
    "papermill": {
     "duration": 0.020975,
     "end_time": "2024-06-11T14:01:46.868243",
     "exception": false,
     "start_time": "2024-06-11T14:01:46.847268",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/data-visualization/discussion) to chat with other learners.*"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 116573,
     "sourceId": 3551030,
     "sourceType": "datasetVersion"
    }
   ],
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.259781,
   "end_time": "2024-06-11T14:01:47.514155",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-11T14:01:36.254374",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
